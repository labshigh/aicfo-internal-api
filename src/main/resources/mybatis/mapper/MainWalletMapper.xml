<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.labshigh.aicfo.internal.api.mainWallet.mapper.MainWalletMapper">

    <!-- 메인지갑 출금 목록 총 건수  -->
    <select id="count" resultType="int">
        SELECT  COUNT(*)
          FROM  withdraw_request
         WHERE  manual_flag = TRUE
    </select>

    <!-- 메인지갑 출금 목록 조회 -->
    <select id="list" resultType="com.labshigh.aicfo.internal.api.mainWallet.dao.MainWalletDao">
        SELECT  to_wallet as walletAddress
                ,request_quantity as totalAmount
                ,gas as gasAmount
                ,(request_quantity - 0.03) amount
                ,updated_at as updateAt
                ,schedule_status
                ,uid
                ,IFNULL(tx_hash, '') as txHash
                ,CASE
                     WHEN schedule_status is null
                         THEN '대기중'
                     WHEN schedule_status = true
                         THEN '완료'
                     ELSE '실패'
            END AS withdrawalStatus
            ,IFNULL((select adm.name from admin adm where adm.uid = admin_uid), '-') AS adminName
            ,created_at AS createdAt
          FROM  withdraw_request
         WHERE  manual_flag = TRUE
         ORDER BY uid DESC
         LIMIT  #{offsetAndRowCount.offset}, #{offsetAndRowCount.rowCount}
    </select>

    <!-- 메인지갑 출금을 위한 정보조회 -->
    <select id="withdrawalInfo" resultType="com.labshigh.aicfo.internal.api.mainWallet.dao.MainWalletDao">
        SELECT  mw.address AS walletAddress
                ,mw.user_id AS toUserId
                ,mw.coin_id
                ,mw.token_id
                ,'메인지갑 수동출금' AS memo
                ,mw.member_uid AS memberUid
                ,mww.internal_wallet_flag AS internalFlag
                ,mww.uid AS memberWalletWithdrawalUid
          FROM  member_wallet_withdrawal mww
     LEFT JOIN  member_wallet mw ON mww.address = mw.address
         WHERE  mw.address = #{walletAddress}
    </select>

    <!-- 메인출금 신청 시 데이터 등록 -->
    <insert id="mainWallerWithdrawalInsert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO withdraw_request
            (
                member_uid
                ,from_wallet
                ,to_wallet
                ,request_quantity
                ,member_wallet_withdrawal_uid
                ,manual_flag
                ,internal_wallet_flag
                ,status
                ,status_memo
                ,admin_verification_date
                ,admin_uid
            )
        VALUES
            (
                #{memberUid}
                ,#{fromAddress}
                ,#{walletAddress}
                ,#{amount}
                ,#{memberWalletWithdrawalUid}
                ,1
                ,#{internalFlag}
                ,1
                ,"메인지갑 수동출금"
                ,now()
                ,#{adminUid}
            )
    </insert>

    <update id="updateTransactionId">
        UPDATE  withdraw_request
        SET  transaction_id = #{transactionId}
        WHERE  uid = #{uid}
    </update>

    <select id="pendingAmount" resultType="bigdecimal">
        SELECT  IFNULL(SUM(request_quantity), 0)
          FROM  withdraw_request wr
         WHERE  wr.status = TRUE
           AND  wr.manual_flag = TRUE
           AND  schedule_status IS NULL;
    </select>
</mapper>
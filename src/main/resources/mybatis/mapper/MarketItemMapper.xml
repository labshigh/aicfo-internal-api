<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.labshigh.aicfo.internal.api.marketItem.mapper.MarketItemMapper">
  <insert id="insert" keyProperty="uid" parameterType="com.labshigh.aicfo.internal.api.marketItem.dao.MarketItemDao" useGeneratedKeys="true">
    INSERT INTO aicfo.market_item (item_uid, quantity, current_quantity, price, transaction_hash)
    VALUES(#{itemUid}, #{quantity}, #{currentQuantity}, #{price} ,#{transactionHash})
  </insert>

  <update id="updateUseItem">
    UPDATE market_item
    SET used_flag = false
    WHERE used_flag = true AND deleted_flag = false AND
      item_uid = #{itemUid}
  </update>
  <select id="list" resultType="com.labshigh.aicfo.internal.api.marketItem.dao.ItemDetailDao">
    SELECT i.uid,
    i.created_at,
    i.updated_at,
    i.deleted_flag,
    i.used_flag,
    i.vip_flag,
    i.round,
    i.close_round,
    i.interest,
    i.start_at,
    i.end_at,
    i.request_end_at,
    i.withdrawal_request_end_at,
    i.min_price,
    IF(i.request_end_at <![CDATA[ < ]]> NOW(), true, false) AS close_flag,
    i.item_kind,
    i.auto_item_uid,
    IFNULL(ibs.total_deposit_price, 0) AS total_deposit_price
    FROM item i LEFT OUTER JOIN (
      SELECT sibs.item_uid, si.close_round, si.auto_item_uid, SUM(sibs.price * 1)  AS total_deposit_price
      FROM item_buy_settlement sibs INNER JOIN item si ON sibs.item_uid = si.uid AND si.deleted_flag = false AND si.used_flag = true
      WHERE sibs.used_flag = true  AND sibs.deleted_flag = false AND sibs.type = 'DEPOSIT' AND sibs.user_id = #{userId}
      GROUP BY sibs.item_uid, si.close_round, si.auto_item_uid
    )	ibs ON i.uid = IF(i.item_kind = 1,ibs.close_round , ibs.auto_item_uid  )
    WHERE i.deleted_flag = false AND
    i.used_flag = true
    <if test="vipFlag != null">
      AND i.vip_flag = #{vipFlag}
    </if>
    <if test="itemUid > 0">
      AND i.uid = #{itemUid}
    </if>
      <if test="curItemUid > 0">
        AND i.uid <![CDATA[ <> ]]> #{curItemUid}
      </if>
    <if test="year != null and year != ''">
      AND DATE_FORMAT(i.start_at, '%Y') = #{year}
    </if>

    <if test="endAt != null and endAt != ''">
      AND i.start_at > #{endAt}
    </if>
    ORDER BY i.start_at
    <if test="endAt != null and endAt != ''">
      LIMIT 0 , 6
    </if>

  </select>
  <select id="listRequestItem"  resultType="com.labshigh.aicfo.internal.api.marketItem.dao.ItemDetailDao">
    SELECT i.uid,
    i.created_at,
    i.updated_at,
    i.deleted_flag,
    i.used_flag,
    i.vip_flag,
    i.round,
    i.close_round,
    i.interest,
    i.start_at,
    i.end_at,
    i.request_end_at,
    i.withdrawal_request_end_at,
    i.min_price,
    IF(i.request_end_at  <![CDATA[ < ]]>  NOW(), true, false) AS close_flag,
    i.item_kind

    FROM item i INNER JOIN (
        SELECT  DISTINCT ib.item_uid
            FROM item_buy ib
            WHERE ib.used_flag = true AND
                  ib.deleted_flag = false AND
                  ib.member_uid = #{memberUid} AND
                  ib.user_id = #{userId}
    ) ib on i.uid = ib.item_uid
    WHERE i.deleted_flag = false AND
    i.used_flag = true

    <if test="processStatus == 1">
      AND NOW() BETWEEN i.start_at AND i.end_at
    </if>

    <if test="processStatus == 2">
      AND NOW() > i.end_at
    </if>

    ORDER BY i.start_at

    <if test="processStatus == 2">
      LIMIT #{offsetAndRowCount.offset}, #{offsetAndRowCount.rowCount}
    </if>

  </select>

  <select id="countRequestItem"  resultType="int">
    SELECT COUNT(*)
    FROM item i INNER JOIN (
      SELECT  DISTINCT ib.item_uid
      FROM item_buy ib
      WHERE ib.used_flag = true AND
      ib.deleted_flag = false AND
      ib.member_uid = #{memberUid} AND
      ib.user_id = #{userId}
    ) ib on i.uid = ib.item_uid
    WHERE i.deleted_flag = false AND
    i.used_flag = true

    <if test="processStatus == 1">
      AND NOW() BETWEEN i.start_at AND i.end_at
    </if>

    <if test="processStatus == 2">
      AND NOW() > i.end_at
    </if>

  </select>

  <select id="listRequestItemByReferrer"  resultType="com.labshigh.aicfo.internal.api.marketItem.dao.MarketItemByReferrerDao">
    SELECT i.uid,
    i.created_at,
    i.updated_at,
    i.deleted_flag,
    i.used_flag,
    i.vip_flag,
    i.round,
    i.close_round,
    i.interest,
    i.start_at,
    i.end_at,
    i.request_end_at,
    i.withdrawal_request_end_at,
    i.min_price,
    IF(i.request_end_at  <![CDATA[ < ]]>  NOW(), true, false) AS close_flag,
    i.item_kind,
    /*mib.total_price,*/
    /*IF(mib.total_price >= 5, true , false) AS point_able_flag*/
    (SELECT IF(IFNULL( SUM(IF(mib.price_unit = 'ETH' , mib.price * 1 , 0 )) , 0) >= 5, true , false) FROM item_buy mib LEFT OUTER JOIN item mi on mib.item_uid = mi.uid AND mi.used_flag = true AND mi.deleted_flag = false  WHERE mib.used_flag = true AND mib.deleted_flag = false AND mib.user_id = #{userId} AND i.start_at BETWEEN mi.start_at AND mi.end_at  ) point_able_flag
    FROM item i INNER JOIN (
      SELECT  DISTINCT ib.item_uid
      FROM item_buy ib INNER JOIN member_wallet mw
                        ON ib.referrer = mw.referrer_code AND mw.used_flag = true AND mw.deleted_flag = false
                        AND mw.user_id = #{userId}
      WHERE ib.used_flag = true AND
        ib.deleted_flag = false
    ) ib on i.uid = ib.item_uid
    /* LEFT OUTER JOIN (
        SELECT mib.item_uid,
               IFNULL(SUM(IF(mib.price_unit = 'ETH',mib.price * 1 , 0)),0) AS total_price
            FROM item_buy mib
            WHERE mib.deleted_flag = false AND
                  mib.used_flag = true AND
                  user_id = {userId}
            GROUP BY mib.item_uid
    ) AS mib ON i.uid = mib.item_uid*/
    WHERE i.deleted_flag = false AND
    i.used_flag = true

    <if test="processStatus == 1">
      AND NOW() BETWEEN i.start_at AND i.end_at
    </if>

    <if test="processStatus == 2">
      AND NOW() > i.end_at
    </if>

    ORDER BY i.start_at

    <if test="processStatus == 2">
      LIMIT #{offsetAndRowCount.offset}, #{offsetAndRowCount.rowCount}
    </if>

  </select>

  <select id="countAdminVipTokenStakingList"  resultType="int">
    SELECT COUNT(*) FROM (
      SELECT  i.uid,
              i.created_at,
              i.updated_at,
              i.deleted_flag,
              i.used_flag,
              i.vip_flag,
              i.round,
              i.close_round,
              i.interest,
              i.start_at,
              i.end_at,
              i.request_end_at,
              i.withdrawal_request_end_at,
              i.min_price,
              IF(i.request_end_at <![CDATA[ < ]]> NOW(), true, false) AS close_flag,
              CASE WHEN ib.item_uid IS NOT NULL AND (NOW() BETWEEN i.start_at AND i.end_at) THEN '진행중'
              WHEN ib.item_uid IS NOT NULL AND NOW() > i.end_at THEN '종료'
              ELSE '-' END AS state,
              i.item_kind,
              uib.item_uid,
              #{userId} AS referrer_code,
              (SELECT COUNT(*) FROM item_buy mib LEFT OUTER JOIN item mi on mib.item_uid = mi.uid AND mi.used_flag = true AND mi.deleted_flag = false  WHERE mib.used_flag = true AND  mib.deleted_flag = false AND mib.item_uid = i.uid  AND mib.referrer = #{referrer} ) AS count_referrer ,
              (SELECT IF(IFNULL( SUM(IF(mib.price_unit = 'ETH' , mib.price * 1 , 0 )) , 0) >= 5, true , false) FROM item_buy mib LEFT OUTER JOIN item mi on mib.item_uid = mi.uid AND mi.used_flag = true AND mi.deleted_flag = false  WHERE mib.used_flag = true AND mib.deleted_flag = false AND mib.user_id = #{userId} AND i.start_at BETWEEN mi.start_at AND mi.end_at  ) point_able_flag
      FROM item i LEFT OUTER JOIN (
      SELECT  DISTINCT ib.item_uid
      FROM item_buy ib INNER JOIN member_wallet mw
      ON ib.referrer = mw.referrer_code AND mw.used_flag = true AND mw.deleted_flag = false
      AND mw.user_id = #{userId}
      WHERE ib.used_flag = true AND ib.deleted_flag = false
    ) ib on i.uid = ib.item_uid
     LEFT OUTER JOIN (
        SELECT uib.item_uid, SUM(uib.price) AS price
        FROM item_buy uib
        WHERE uib.used_flag = true AND
          uib.deleted_flag = false AND
          uib.price_unit = 'ETH'
          AND uib.user_id = #{userId}
        GROUP BY uib.item_uid
      ) uib ON i.uid = uib.item_uid

    WHERE i.deleted_flag = false AND i.used_flag = true

    ) rs
    WHERE ( rs.item_uid IS NOT NULL OR rs.count_referrer > 0 )

  </select>


  <select id="listAdminVipTokenStaking"  resultType="com.labshigh.aicfo.internal.api.marketItem.dao.MarketItemAdminVipTokenStakingDao">
    SELECT * FROM (
      SELECT i.uid,
        i.created_at,
        i.updated_at,
        i.deleted_flag,
        i.used_flag,
        i.vip_flag,
        i.round,
        i.close_round,
        i.interest,
        i.start_at,
        i.end_at,
        i.request_end_at,
        i.withdrawal_request_end_at,
        i.min_price,
        IF(i.request_end_at <![CDATA[ < ]]> NOW(), true, false) AS close_flag,
        CASE WHEN uib.item_uid IS NOT NULL AND (NOW() BETWEEN i.start_at AND i.end_at) THEN '진행중'
             WHEN uib.item_uid IS NOT NULL AND NOW() <![CDATA[ < ]]> i.start_at THEN '준비중'
             WHEN uib.item_uid IS NOT NULL AND NOW() > i.end_at THEN '종료'
             ELSE '-' END AS state,
        i.item_kind,
        uib.item_uid,
        IFNULL(uib.price,0) AS price,
        (IFNULL(uib.price,0) * 1) * ((i.interest * 1) / 100) AS interest_price,
        IFNULL(uib.price,0) + ((IFNULL(uib.price,0) * 1) * ((i.interest * 1) / 100)) AS total_price,
        #{userId} AS userId,
    (SELECT referrer_code FROM member_wallet where user_id = #{userId}) AS referrer_code,
        (SELECT COUNT(*) FROM item_buy mib LEFT OUTER JOIN item mi on mib.item_uid = mi.uid AND mi.used_flag = true AND mi.deleted_flag = false  WHERE mib.used_flag = true AND mib.deleted_flag = false AND mib.item_uid = i.uid AND mib.referrer = #{referrer} ) AS count_referrer ,
        (SELECT IF(IFNULL( SUM(IF(mib.price_unit = 'ETH' , mib.price * 1 , 0 )) , 0) >= 5, true , false) FROM item_buy mib LEFT OUTER JOIN item mi on mib.item_uid = mi.uid AND mi.used_flag = true AND mi.deleted_flag = false  WHERE mib.used_flag = true AND mib.deleted_flag = false AND mib.user_id = #{userId} AND i.start_at BETWEEN mi.start_at AND mi.end_at  ) point_able_flag
      FROM item i LEFT OUTER JOIN (
        SELECT  ib.item_uid , mw.referrer_code, SUM(ib.price) AS price
        FROM item_buy ib INNER JOIN member_wallet mw
          ON ib.referrer = mw.referrer_code AND mw.used_flag = true AND mw.deleted_flag = false
          AND mw.user_id = #{userId}
        WHERE ib.used_flag = true AND
          ib.deleted_flag = false AND
          ib.price_unit = 'ETH'
        GROUP BY ib.item_uid , mw.referrer_code
        ) ib on i.uid = ib.item_uid
        LEFT OUTER JOIN (
          SELECT uib.item_uid, SUM(uib.price) AS price
          FROM item_buy uib
          WHERE uib.used_flag = true AND
            uib.deleted_flag = false AND
            uib.price_unit = 'ETH'
            AND uib.user_id = #{userId}
          GROUP BY uib.item_uid
         ) uib ON i.uid = uib.item_uid
        WHERE i.deleted_flag = false AND
        i.used_flag = true
        ) rs
      WHERE ( rs.item_uid IS NOT NULL OR rs.count_referrer > 0 )

    <if test="sortType != null and sortType.name() == 'ASC'">
      ORDER BY rs.start_at
    </if>

    <if test="sortType == null or sortType.name() == 'DESC'">
      ORDER BY rs.start_at DESC
    </if>

    LIMIT #{offsetAndRowCount.offset}, #{offsetAndRowCount.rowCount}

  </select>



  <select id="countRequestItemByReferrer"  resultType="int">
    SELECT COUNT(*)
    FROM item i INNER JOIN (
      SELECT  DISTINCT ib.item_uid
      FROM item_buy ib  INNER JOIN member_wallet mw
      ON ib.referrer = mw.referrer_code AND mw.used_flag = true AND mw.deleted_flag = false
        AND mw.user_id = #{userId}
      WHERE ib.used_flag = true AND
        ib.deleted_flag = false
    ) ib on i.uid = ib.item_uid
    /*LEFT OUTER JOIN (
      SELECT mib.item_uid,
      IFNULL(SUM(IF(mib.price_unit = 'ETH',mib.price * 1 , 0)),0) AS total_price
      FROM item_buy mib
      WHERE mib.deleted_flag = false AND
        mib.used_flag = true AND
        user_id = {userId}
      GROUP BY mib.item_uid
    ) AS mib ON i.uid = mib.item_uid*/
    WHERE i.deleted_flag = false AND
    i.used_flag = true

    <if test="processStatus == 1">
      AND NOW() BETWEEN i.start_at AND i.end_at
    </if>

    <if test="processStatus == 2">
      AND NOW() > i.end_at
    </if>

  </select>

  <select id="listReferrer" resultType="com.labshigh.aicfo.internal.api.marketItem.dao.MarketItemMyReferrerDao">
    SELECT mw.referrer_code,
           m.email,
           i.interest,
           IFNULL(SUM(IF(ib.price_unit = 'ETH',ib.price * 1 , 0)),0) AS total_price,
           IFNULL(SUM(IF(ib.price_unit = 'ETH',ib.price * 1 , 0)),0) * 0.1 AS meth_price,
           IFNULL(SUM(IF(ib.price_unit = 'ETH',(ib.price * 1) * (i.interest / 100) , 0)),0) AS interest_price,
           (SELECT IF(IFNULL( SUM(IF(mib.price_unit = 'ETH' , mib.price * 1 , 0 )) , 0) >= 5, true , false) FROM item_buy mib LEFT OUTER JOIN item mi on mib.item_uid = mi.uid AND mi.used_flag = true AND mi.deleted_flag = false  WHERE mib.used_flag = true AND mib.deleted_flag = false AND mib.user_id = #{userId} AND i.start_at BETWEEN mi.start_at AND mi.end_at  ) point_able_flag
    FROM item_buy ib LEFT OUTER JOIN member_wallet mw
        on mw.deleted_flag = false AND mw.used_flag = true  AND ib.user_id = mw.user_id
        LEFT OUTER JOIN member m ON m.uid =  mw.member_uid AND m.deleted_flag = false AND m.used_flag = true
        LEFT OUTER JOIN item i ON i.uid = ib.item_uid AND i.used_flag = true AND i.deleted_flag = false
    WHERE ib.used_flag = true AND ib.deleted_flag = false AND
          ib.item_uid = #{itemUid} AND ib.referrer = (SELECT referrer_code
                                                      FROM member_wallet mw WHERE mw.user_id = #{userId})
    GROUP BY mw.referrer_code , m.email, i.interest

  </select>

  <select id="selectReferrerAbleFlag" resultType="boolean">
    SELECT IF(IFNULL( SUM(IF(mib.price_unit = 'ETH' , mib.price * 1 , 0 )) , 0) >= 5, true , false)
    FROM item_buy mib LEFT OUTER JOIN item mi on mib.item_uid = mi.uid AND mi.used_flag = true AND mi.deleted_flag = false
    WHERE mib.used_flag = true AND mib.deleted_flag = false AND mib.user_id = #{userId}
      AND  (SELECT start_at FROM item WHERE deleted_flag = false AND used_flag = true AND uid = #{itemUid}) BETWEEN mi.start_at AND mi.end_at
  </select>


</mapper>
